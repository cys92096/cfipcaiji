name: Update IP List

on:
  schedule:
    - cron: '0 */6 * * *' # 每6小时运行一次 (根据cron表达式)
  workflow_dispatch: # 允许手动触发

jobs:

  update-ip-list:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        # fetch-depth: 0 是为了确保 git pull 能够正常工作，
        # 因为默认的 checkout 可能只获取一部分历史记录
        fetch-depth: 0 
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        # 如果你的 Python 脚本不再使用 BeautifulSoup4，可以移除这一行
        # pip install beautifulsoup4 
        
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 2
        keep_minimum_runs: 6
        
    - name: Run script
      run: python ${{ github.workspace }}/collect_ips.py # 确保这个路径和文件名是正确的
        
    - name: Commit and push changes
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Action"
        
        # 检查是否有文件更改 (例如 ip.txt)
        if [ -n "$(git status --porcelain)" ]; then
          echo "Changes detected, proceeding with commit and push."
          git add ip.txt
          git commit -m "Automatic update"
          
          # 在 push 之前先拉取远程更新，解决可能的冲突
          # 假设你的主分支是 main，如果不是请修改
          git pull origin main --rebase || { echo "Merge conflict detected during pull. Aborting push."; exit 1; }
          
          # 推送更改到远程仓库的 main 分支
          git push origin main
        else
          echo "No changes detected, skipping commit and push."
        fi        
    - name: Commit and push changes
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Action"
        if [ -n "$(git status --porcelain)" ]; then
          git add ip.txt
          git commit -m "Automatic update"
          git push
        else
          echo "No changes detected, skipping commit."
        fi
